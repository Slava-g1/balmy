"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlocksService = void 0;
const timeouts_1 = require("../../shared/timeouts");
class BlocksService {
    constructor(source) {
        this.source = source;
    }
    supportedChains() {
        return this.source.supportedChains();
    }
    async getBlockClosestToTimestampInChain({ chainId, timestamp, config, }) {
        const result = await this.getBlocksClosestToTimestampsInChain({ chainId, timestamps: [timestamp], config });
        return result[timestamp];
    }
    async getBlocksClosestToTimestampsInChain({ chainId, timestamps, config, }) {
        const result = await this.getBlocksClosestToTimestamps({ timestamps: timestamps.map((timestamp) => ({ chainId, timestamp })), config });
        return result[chainId];
    }
    async getBlocksClosestToTimestamps({ timestamps, config }) {
        if (timestamps.length === 0)
            return {};
        return (0, timeouts_1.timeoutPromise)(this.source.getBlocksClosestToTimestamps({ timestamps, config }), config?.timeout);
    }
}
exports.BlocksService = BlocksService;
//# sourceMappingURL=block-service.js.map