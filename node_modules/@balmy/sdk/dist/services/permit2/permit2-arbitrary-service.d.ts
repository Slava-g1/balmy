import { ArbitraryCallWithBatchPermitParams, ArbitraryCallWithoutPermitParams, ArbitraryCallWithPermitParams, BatchPermitData, BatchPermitParams, IPermit2ArbitraryService, IPermit2Service, PermitData, SinglePermitParams } from './types';
import { BuiltTransaction } from '../../types';
export declare class Permit2ArbitraryService implements IPermit2ArbitraryService {
    private readonly permit2Service;
    readonly permit2AdapterContract: import("../..").Contract;
    constructor(permit2Service: IPermit2Service);
    preparePermitData(args: SinglePermitParams): Promise<PermitData>;
    prepareBatchPermitData(args: BatchPermitParams): Promise<BatchPermitData>;
    buildArbitraryCallWithPermit(params: ArbitraryCallWithPermitParams): {
        to: Lowercase<string> & `0x${string}`;
        data: `0x${string}`;
        value: bigint;
    };
    buildArbitraryCallWithBatchPermit(params: ArbitraryCallWithBatchPermitParams): BuiltTransaction;
    buildArbitraryCallWithoutPermit(params: ArbitraryCallWithoutPermitParams): BuiltTransaction;
    private buildArbitraryCallInternal;
}
