"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceService = void 0;
const timeouts_1 = require("../../shared/timeouts");
class BalanceService {
    constructor(source) {
        this.source = source;
    }
    supportedChains() {
        return this.source.supportedChains();
    }
    async getBalancesForAccountInChain({ chainId, account, tokens, config, }) {
        const result = await this.getBalancesForAccount({
            account,
            tokens: tokens.map((token) => ({ chainId, token })),
            config,
        });
        return result[chainId] ?? {};
    }
    async getBalancesForAccount({ account, tokens, config, }) {
        const result = await this.getBalances({ tokens: tokens.map((token) => ({ account, ...token })), config });
        const entries = Object.entries(result)
            .map(([chainId, result]) => [Number(chainId), result[account]])
            .filter((entry) => entry[1] !== undefined);
        return Object.fromEntries(entries);
    }
    async getBalancesInChain({ chainId, tokens, config, }) {
        const result = await this.getBalances({ tokens: tokens.map((token) => ({ chainId, ...token })), config });
        return result[chainId] ?? {};
    }
    getBalances({ tokens, config }) {
        return (0, timeouts_1.timeoutPromise)(this.source.getBalances({ tokens, config }), config?.timeout);
    }
}
exports.BalanceService = BalanceService;
//# sourceMappingURL=balance-service.js.map