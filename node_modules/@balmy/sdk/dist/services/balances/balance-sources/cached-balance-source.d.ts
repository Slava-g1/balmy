import { Address, ChainId, TimeString, TokenAddress } from '../../../types';
import { CacheConfig } from '../../../shared/concurrent-lru-cache';
import { BalanceInput, IBalanceSource } from '../types';
export declare class CachedBalanceSource implements IBalanceSource {
    private readonly source;
    private readonly cache;
    constructor(source: IBalanceSource, config: CacheConfig);
    supportedChains(): number[];
    getBalances({ tokens, config, }: {
        tokens: BalanceInput[];
        config?: {
            timeout?: TimeString;
        };
    }): Promise<Record<ChainId, Record<Address, Record<TokenAddress, bigint>>>>;
    private fetchBalancesForTokens;
}
