"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefiLlamaMetadataSource = void 0;
const defi_llama_1 = require("../../../shared/defi-llama");
class DefiLlamaMetadataSource {
    constructor(fetch) {
        this.defiLlama = new defi_llama_1.DefiLlamaClient(fetch);
    }
    async getMetadata(params) {
        const result = {};
        const data = await this.defiLlama.getCurrentTokenData(params);
        for (const [chainIdString, tokens] of Object.entries(data)) {
            const chainId = Number(chainIdString);
            result[chainId] = {};
            for (const [address, { confidence, timestamp, price, ...metadata }] of Object.entries(tokens)) {
                result[chainId][address] = metadata;
            }
        }
        return result;
    }
    supportedProperties() {
        const properties = { symbol: 'present', decimals: 'present' };
        return Object.fromEntries(this.defiLlama.supportedChains().map((chainId) => [chainId, properties]));
    }
}
exports.DefiLlamaMetadataSource = DefiLlamaMetadataSource;
//# sourceMappingURL=defi-llama-metadata-source.js.map