import { ChainId, TimeString } from '../../../types';
import { IProviderSource } from '../types';
import { Transport } from 'viem';
export type LoadBalanceProviderSourceConfig = {
    minSuccessRate?: number;
    minSamples?: number;
    maxAttempts?: number;
    maxConcurrent?: number;
    samplesTtl?: TimeString;
    timeout?: {
        default?: TimeString;
        byMethod?: Record<string, TimeString>;
    };
};
export declare class LoadBalanceProviderSource implements IProviderSource {
    private readonly sources;
    private readonly config;
    constructor(sources: IProviderSource[], config: LoadBalanceProviderSourceConfig | undefined);
    supportedChains(): number[];
    getViemTransport({ chainId }: {
        chainId: ChainId;
    }): Transport;
}
