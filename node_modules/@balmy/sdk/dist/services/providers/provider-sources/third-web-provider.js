"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildThirdWebRPCUrl = exports.thirdWebSupportedChains = exports.ThirdWebProviderSource = void 0;
const _chains_1 = require("../../../chains");
const base_http_provider_1 = require("./base/base-http-provider");
const SUPPORTED_NETWORKS = [
    _chains_1.Chains.ETHEREUM,
    _chains_1.Chains.OPTIMISM,
    _chains_1.Chains.BNB_CHAIN,
    _chains_1.Chains.GNOSIS,
    _chains_1.Chains.POLYGON,
    _chains_1.Chains.MANTLE,
    _chains_1.Chains.BASE,
    _chains_1.Chains.MODE,
    _chains_1.Chains.ARBITRUM,
    _chains_1.Chains.ARBITRUM_NOVA,
    _chains_1.Chains.AVALANCHE,
    _chains_1.Chains.LINEA,
    _chains_1.Chains.SCROLL,
    _chains_1.Chains.FUSE,
    _chains_1.Chains.opBNB,
    _chains_1.Chains.FANTOM,
    _chains_1.Chains.BOBA,
    _chains_1.Chains.METIS_ANDROMEDA,
    _chains_1.Chains.POLYGON_ZKEVM,
    _chains_1.Chains.MOONBEAM,
    _chains_1.Chains.CELO,
    _chains_1.Chains.BLAST,
    _chains_1.Chains.CRONOS,
    _chains_1.Chains.ROOTSTOCK,
    _chains_1.Chains.ONTOLOGY,
    _chains_1.Chains.OKC,
    _chains_1.Chains.VELAS,
    _chains_1.Chains.BIT_TORRENT,
    _chains_1.Chains.ASTAR,
];
class ThirdWebProviderSource extends base_http_provider_1.BaseHttpProvider {
    constructor(onChains) {
        super();
        this.supported = onChains ?? thirdWebSupportedChains();
    }
    supportedChains() {
        return this.supported;
    }
    calculateUrl(chainId) {
        return buildThirdWebRPCUrl({ chainId });
    }
}
exports.ThirdWebProviderSource = ThirdWebProviderSource;
function thirdWebSupportedChains() {
    return SUPPORTED_NETWORKS.map(({ chainId }) => chainId);
}
exports.thirdWebSupportedChains = thirdWebSupportedChains;
function buildThirdWebRPCUrl({ chainId }) {
    return `https://${chainId}.rpc.thirdweb.com`;
}
exports.buildThirdWebRPCUrl = buildThirdWebRPCUrl;
//# sourceMappingURL=third-web-provider.js.map