import { Transport } from 'viem';
import { ChainId } from '../../../types';
import { LoadBalanceProviderSourceConfig } from './load-balance-provider';
import { FallbackProviderSourceConfig } from './fallback-provider';
import { IProviderSource } from '../types';
export type PublicRPCsProviderSourceConfig = ({
    type: 'load-balance';
} & LoadBalanceProviderSourceConfig) | ({
    type: 'fallback';
} & FallbackProviderSourceConfig);
export declare class PublicRPCsProviderSource implements IProviderSource {
    private readonly source;
    constructor(params?: {
        publicRPCs?: Record<ChainId, string[]>;
        config?: PublicRPCsProviderSourceConfig;
    });
    supportedChains(): ChainId[];
    getViemTransport({ chainId }: {
        chainId: ChainId;
    }): Transport;
}
