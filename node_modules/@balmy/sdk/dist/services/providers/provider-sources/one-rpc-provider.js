"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.oneRPCSupportedChains = exports.buildOneRPCUrl = exports.OneRPCProviderSource = void 0;
const _chains_1 = require("../../../chains");
const base_http_provider_1 = require("./base/base-http-provider");
const SUPPORTED_CHAINS = {
    [_chains_1.Chains.ETHEREUM.chainId]: 'eth',
    [_chains_1.Chains.ETHEREUM_SEPOLIA.chainId]: 'sepolia',
    [_chains_1.Chains.BNB_CHAIN.chainId]: 'bnb',
    [_chains_1.Chains.POLYGON.chainId]: 'matic',
    [_chains_1.Chains.POLYGON_ZKEVM.chainId]: 'polygon/zkevm',
    [_chains_1.Chains.AVALANCHE.chainId]: 'avax/c',
    [_chains_1.Chains.ARBITRUM.chainId]: 'arb',
    [_chains_1.Chains.MOONBEAM.chainId]: 'glmr',
    [_chains_1.Chains.ASTAR.chainId]: 'astr',
    [_chains_1.Chains.OPTIMISM.chainId]: 'op',
    [_chains_1.Chains.FANTOM.chainId]: 'ftm',
    [_chains_1.Chains.CELO.chainId]: 'celo',
    [_chains_1.Chains.KAIA.chainId]: 'klay',
    [_chains_1.Chains.AURORA.chainId]: 'aurora',
    [_chains_1.Chains.BASE.chainId]: 'base',
    [_chains_1.Chains.GNOSIS.chainId]: 'gnosis',
    [_chains_1.Chains.OKC.chainId]: 'oktc',
    [_chains_1.Chains.CRONOS.chainId]: 'cro',
    [_chains_1.Chains.opBNB.chainId]: 'opbnb',
    [_chains_1.Chains.BOBA.chainId]: 'boba/eth',
    [_chains_1.Chains.MODE.chainId]: 'mode',
};
class OneRPCProviderSource extends base_http_provider_1.BaseHttpProvider {
    constructor(key, onChains) {
        super();
        this.key = key;
        this.supported = onChains ?? oneRPCSupportedChains();
    }
    supportedChains() {
        return this.supported;
    }
    calculateUrl(chainId) {
        return buildOneRPCUrl({ chainId, apiKey: this.key });
    }
}
exports.OneRPCProviderSource = OneRPCProviderSource;
function buildOneRPCUrl({ chainId, apiKey }) {
    let url = 'https://1rpc.io/';
    if (apiKey) {
        url += `${apiKey}/`;
    }
    url += SUPPORTED_CHAINS[chainId];
    return url;
}
exports.buildOneRPCUrl = buildOneRPCUrl;
function oneRPCSupportedChains() {
    return Object.keys(SUPPORTED_CHAINS).map(Number);
}
exports.oneRPCSupportedChains = oneRPCSupportedChains;
//# sourceMappingURL=one-rpc-provider.js.map