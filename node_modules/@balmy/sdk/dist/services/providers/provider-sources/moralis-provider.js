"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.moralisSupportedChains = exports.buildMoralisRPCUrl = exports.MoralisProviderSource = void 0;
const _chains_1 = require("../../../chains");
const base_http_provider_1 = require("./base/base-http-provider");
const SUPPORTED_CHAINS = {
    [_chains_1.Chains.ETHEREUM.chainId]: 'eth',
    [_chains_1.Chains.ETHEREUM_SEPOLIA.chainId]: 'sepolia',
    [_chains_1.Chains.POLYGON.chainId]: 'polygon',
    [_chains_1.Chains.BNB_CHAIN.chainId]: 'bsc',
    [_chains_1.Chains.ARBITRUM.chainId]: 'arbitrum',
    [_chains_1.Chains.BASE.chainId]: 'base',
    [_chains_1.Chains.OPTIMISM.chainId]: 'optimism',
    [_chains_1.Chains.LINEA.chainId]: 'linea',
    [_chains_1.Chains.AVALANCHE.chainId]: 'avalanche',
    [_chains_1.Chains.GNOSIS.chainId]: 'gnosis',
    [_chains_1.Chains.MOONBEAM.chainId]: 'moonbeam',
    [_chains_1.Chains.MOONRIVER.chainId]: 'moonriver',
    [_chains_1.Chains.BLAST.chainId]: 'blast',
    [_chains_1.Chains.MANTLE.chainId]: 'mantle',
    [_chains_1.Chains.POLYGON_ZKEVM.chainId]: 'polygon-zkevm',
};
class MoralisProviderSource extends base_http_provider_1.BaseHttpProvider {
    constructor(config) {
        super();
        if ('keys' in config) {
            this.supported = Object.keys(config.keys).map(Number);
            this.keys = config.keys;
        }
        else {
            this.supported = config.onChains ?? moralisSupportedChains();
            this.keys = {};
        }
        this.site = config.site ?? 'site1';
    }
    supportedChains() {
        return this.supported;
    }
    calculateUrl(chainId) {
        return buildMoralisRPCUrl({ chainId, apiKey: this.keys[chainId], site: this.site });
    }
}
exports.MoralisProviderSource = MoralisProviderSource;
function buildMoralisRPCUrl({ chainId, apiKey, site = 'site1' }) {
    let url = `https://${site}.moralis-nodes.com/${SUPPORTED_CHAINS[chainId]}/`;
    if (apiKey) {
        url += `${apiKey}`;
    }
    return url;
}
exports.buildMoralisRPCUrl = buildMoralisRPCUrl;
function moralisSupportedChains() {
    return Object.keys(SUPPORTED_CHAINS).map(Number);
}
exports.moralisSupportedChains = moralisSupportedChains;
//# sourceMappingURL=moralis-provider.js.map