"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.onFinalitySupportedChains = exports.buildOnFinalityRPCUrl = exports.OnFinalityProviderSource = void 0;
const _chains_1 = require("../../../chains");
const base_http_provider_1 = require("./base/base-http-provider");
const SUPPORTED_CHAINS = {
    [_chains_1.Chains.ETHEREUM.chainId]: 'https://eth.api.onfinality.io/public',
    [_chains_1.Chains.ETHEREUM_SEPOLIA.chainId]: 'https://eth-sepolia.api.onfinality.io/public',
    [_chains_1.Chains.BNB_CHAIN.chainId]: 'https://bnb.api.onfinality.io/public',
    [_chains_1.Chains.POLYGON.chainId]: 'https://polygon.api.onfinality.io/public',
    [_chains_1.Chains.POLYGON_MUMBAI.chainId]: 'https://polygon-mumbai.api.onfinality.io/public',
    [_chains_1.Chains.ARBITRUM.chainId]: 'https://arbitrum.api.onfinality.io/public',
    [_chains_1.Chains.OPTIMISM.chainId]: 'https://optimism.api.onfinality.io/public',
    [_chains_1.Chains.BASE.chainId]: 'https://base.api.onfinality.io/public',
    [_chains_1.Chains.FANTOM.chainId]: 'https://fantom.api.onfinality.io/public',
    [_chains_1.Chains.AVALANCHE.chainId]: 'https://avalanche.api.onfinality.io/public/ext/bc/C',
    [_chains_1.Chains.GNOSIS.chainId]: 'https://gnosis.api.onfinality.io/public',
    [_chains_1.Chains.KAIA.chainId]: 'https://klaytn.api.onfinality.io/public',
    [_chains_1.Chains.CELO.chainId]: 'https://celo.api.onfinality.io/public',
    [_chains_1.Chains.FUSE.chainId]: 'https://fuse.api.onfinality.io/public',
    [_chains_1.Chains.KAVA.chainId]: 'https://kava.api.onfinality.io/public',
    [_chains_1.Chains.METIS_ANDROMEDA.chainId]: 'https://metis.api.onfinality.io/public',
    [_chains_1.Chains.MOONBEAM.chainId]: 'https://moonbeam.api.onfinality.io/public',
    [_chains_1.Chains.MOONRIVER.chainId]: 'https://moonriver.api.onfinality.io/public',
    [_chains_1.Chains.ASTAR.chainId]: 'https://astar.api.onfinality.io/public',
};
class OnFinalityProviderSource extends base_http_provider_1.BaseHttpProvider {
    constructor(key, onChains) {
        super();
        this.key = key;
        this.supported = onChains ?? onFinalitySupportedChains();
    }
    supportedChains() {
        return this.supported;
    }
    calculateUrl(chainId) {
        return buildOnFinalityRPCUrl({ chainId, apiKey: this.key });
    }
}
exports.OnFinalityProviderSource = OnFinalityProviderSource;
function buildOnFinalityRPCUrl({ chainId, apiKey }) {
    const publicUrl = SUPPORTED_CHAINS[chainId];
    return apiKey ? publicUrl.replace('/public', '') + `/rpc?apikey=${apiKey}` : publicUrl;
}
exports.buildOnFinalityRPCUrl = buildOnFinalityRPCUrl;
function onFinalitySupportedChains() {
    return Object.keys(SUPPORTED_CHAINS).map(Number);
}
exports.onFinalitySupportedChains = onFinalitySupportedChains;
//# sourceMappingURL=on-finality-provider.js.map