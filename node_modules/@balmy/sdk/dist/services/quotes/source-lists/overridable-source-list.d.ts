import { QuoteTransaction, SourceId } from '../types';
import { IQuoteSourceList, SourceListBuildTxRequest, SourceListQuoteRequest, SourceListQuoteResponse } from './types';
type ConstructorParameters = {
    default: IQuoteSourceList;
    overrides: {
        getQuotes?: {
            list: IQuoteSourceList;
            sourceIds: SourceId[];
        }[];
        buildTxs?: {
            list: IQuoteSourceList;
            sourceIds: SourceId[];
        }[];
    };
};
export declare class OverridableSourceList implements IQuoteSourceList {
    private readonly getQuotesOverrides;
    private readonly buildTxsOverrides;
    private readonly defaultSourceList;
    constructor({ default: defaultSourceList, overrides }: ConstructorParameters);
    supportedSources(): Record<string, import("../types").SourceMetadata>;
    getQuotes(request: SourceListQuoteRequest): Record<SourceId, Promise<SourceListQuoteResponse>>;
    buildTxs(request: SourceListBuildTxRequest): Record<SourceId, Promise<QuoteTransaction>>;
}
export {};
