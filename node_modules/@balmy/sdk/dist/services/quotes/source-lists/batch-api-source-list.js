"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchAPISourceList = void 0;
const timeouts_1 = require("../../../shared/timeouts");
const utils_1 = require("./utils");
class BatchAPISourceList {
    constructor({ fetchService, getQuotesURI, buildTxURI, sources }) {
        this.fetchService = fetchService;
        this.getQuotesURI = getQuotesURI;
        this.buildTxURI = buildTxURI;
        this.sources = sources;
    }
    supportedSources() {
        return this.sources;
    }
    getQuotes(request) {
        // We reduce the request a little bit so that the server tries to be faster that the timeout
        const reducedTimeout = (0, timeouts_1.reduceTimeout)(request.quoteTimeout, '500');
        const uri = this.getQuotesURI(request);
        const response = this.fetchService.fetch(uri, {
            method: 'POST',
            body: JSON.stringify({
                ...request,
                quoteTimeout: reducedTimeout,
            }),
            timeout: request.quoteTimeout,
        });
        const result = response.then((result) => result.json());
        return Object.fromEntries(request.sources.map((sourceId) => [
            sourceId,
            result.then((responses) => sourceId in responses
                ? (0, utils_1.bigintifyQuote)(responses[sourceId])
                : Promise.reject(new Error(`Failed to fins a quote for source ${sourceId}`))),
        ]));
    }
    buildTxs(request) {
        const result = this.fetchTxs(request);
        return Object.fromEntries(Object.keys(request.quotes).map((sourceId) => [sourceId, result.then((responses) => (0, utils_1.bigintifyTx)(responses[sourceId]))]));
    }
    async fetchTxs(request) {
        const quotes = {};
        const promises = Object.entries(request.quotes).map(([sourceId, quotePromise]) => quotePromise.then((quote) => (quotes[sourceId] = quote)).catch(() => { }) // If the quote fails, then do ignore it
        );
        await Promise.all(promises);
        // We reduce the request a little bit so that the server tries to be faster that the timeout
        const reducedTimeout = (0, timeouts_1.reduceTimeout)(request.quoteTimeout, '500');
        const apiRequest = {
            sourceConfig: request.sourceConfig,
            quotes,
            quoteTimeout: reducedTimeout,
        };
        const uri = this.buildTxURI(apiRequest);
        const response = this.fetchService.fetch(uri, {
            method: 'POST',
            body: JSON.stringify(apiRequest),
            timeout: request.quoteTimeout,
        });
        return response.then((result) => result.json());
    }
}
exports.BatchAPISourceList = BatchAPISourceList;
//# sourceMappingURL=batch-api-source-list.js.map