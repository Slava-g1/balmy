import { QuoteTransaction, SourceId } from '../types';
import { IQuoteSourceList, SourceListBuildTxRequest, SourceListQuoteRequest, SourceListQuoteResponse } from './types';
import { IFetchService } from '../../fetch/types';
import { IProviderService } from '../../providers';
type ConstructorParameters = {
    providerService: IProviderService;
    fetchService: IFetchService;
};
export declare class LocalSourceList implements IQuoteSourceList {
    private readonly providerService;
    private readonly fetchService;
    private readonly sources;
    constructor({ providerService, fetchService }: ConstructorParameters);
    supportedSources(): any;
    getQuotes(request: SourceListQuoteRequest): Record<SourceId, Promise<SourceListQuoteResponse>>;
    buildTxs(request: SourceListBuildTxRequest): Record<SourceId, Promise<QuoteTransaction>>;
    private buildTx;
    private getQuote;
    private getSourceForRequest;
}
export {};
