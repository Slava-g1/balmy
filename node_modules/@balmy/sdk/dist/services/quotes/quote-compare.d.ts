import { QuoteResponse } from './types';
export declare const COMPARE_BY: readonly ["least-gas", "most-swapped", "most-swapped-accounting-for-gas"];
export declare const COMPARE_USING: readonly ["sell/buy amounts", "max sell/min buy amounts"];
export type CompareQuotesBy = (typeof COMPARE_BY)[number];
export type CompareQuotesUsing = (typeof COMPARE_USING)[number];
export type ComparableQuote = Pick<QuoteResponse, 'sellToken' | 'buyToken' | 'sellAmount' | 'maxSellAmount' | 'buyAmount' | 'minBuyAmount' | 'gas'>;
export declare function sortQuotesBy<T extends ComparableQuote>(quotes: T[], sortBy: CompareQuotesBy, using: CompareQuotesUsing): T[];
export declare function chooseQuotesBy<T extends ComparableQuote>(quotes: T[], sortBy: CompareQuotesBy, using: CompareQuotesUsing): T;
export declare function compareQuotesBy(sortBy: CompareQuotesBy, using: CompareQuotesUsing): (quote1: ComparableQuote, quote2: ComparableQuote) => number;
