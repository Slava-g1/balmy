import { QuoteParams, QuoteSourceMetadata, SourceQuoteResponse, SourceQuoteTransaction, BuildTxParams, IQuoteSource } from './types';
type EnsoSupport = {
    buyOrders: false;
    swapAndTransfer: false;
};
type EnsoConfig = {
    apiKey: string;
    routingStrategy?: 'router' | 'delegate' | 'ensowallet';
};
type EnsoData = {
    tx: SourceQuoteTransaction;
};
export declare class EnsoQuoteSource implements IQuoteSource<EnsoSupport, EnsoConfig, EnsoData> {
    getMetadata(): QuoteSourceMetadata<EnsoSupport>;
    quote({ components: { fetchService }, request: { chainId, sellToken, buyToken, order, config: { slippagePercentage, timeout }, accounts: { takeFrom }, }, config, }: QuoteParams<EnsoSupport, EnsoConfig>): Promise<SourceQuoteResponse<EnsoData>>;
    buildTx({ request }: BuildTxParams<EnsoConfig, EnsoData>): Promise<SourceQuoteTransaction>;
    isConfigAndContextValidForQuoting(config: Partial<EnsoConfig> | undefined): config is EnsoConfig;
    isConfigAndContextValidForTxBuilding(config: Partial<EnsoConfig> | undefined): config is EnsoConfig;
}
export {};
