import { IQuoteSource, QuoteParams, QuoteSourceMetadata, SourceQuoteResponse, SourceQuoteTransaction, BuildTxParams } from './types';
type DodoDexConfig = {
    apiKey: string;
};
type DodoDexSupport = {
    buyOrders: false;
    swapAndTransfer: false;
};
type DodoDexData = {
    tx: SourceQuoteTransaction;
};
export declare class DodoDexQuoteSource implements IQuoteSource<DodoDexSupport, DodoDexConfig, DodoDexData> {
    getMetadata(): QuoteSourceMetadata<DodoDexSupport>;
    quote({ components: { fetchService }, request: { chainId, sellToken, buyToken, order, accounts: { takeFrom }, config: { slippagePercentage, timeout }, }, config, }: QuoteParams<DodoDexSupport, DodoDexConfig>): Promise<SourceQuoteResponse<DodoDexData>>;
    buildTx({ request }: BuildTxParams<DodoDexConfig, DodoDexData>): Promise<SourceQuoteTransaction>;
    isConfigAndContextValidForQuoting(config: Partial<DodoDexConfig> | undefined): config is DodoDexConfig;
    isConfigAndContextValidForTxBuilding(config: Partial<DodoDexConfig> | undefined): config is DodoDexConfig;
}
export {};
