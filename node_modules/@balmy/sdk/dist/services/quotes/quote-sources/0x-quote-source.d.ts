import { IQuoteSource, QuoteParams, QuoteSourceMetadata, SourceQuoteResponse, SourceQuoteTransaction, BuildTxParams } from './types';
type ZRXConfig = {
    apiKey: string;
};
type ZRXSupport = {
    buyOrders: false;
    swapAndTransfer: false;
};
type ZRXData = {
    tx: SourceQuoteTransaction;
};
export declare class ZRXQuoteSource implements IQuoteSource<ZRXSupport, ZRXConfig, ZRXData> {
    getMetadata(): QuoteSourceMetadata<ZRXSupport>;
    quote({ components: { fetchService }, request: { chainId, sellToken, buyToken, order, config: { slippagePercentage, timeout }, accounts: { takeFrom }, }, config, }: QuoteParams<ZRXSupport, ZRXConfig>): Promise<SourceQuoteResponse<ZRXData>>;
    buildTx({ request }: BuildTxParams<ZRXConfig, ZRXData>): Promise<SourceQuoteTransaction>;
    isConfigAndContextValidForQuoting(config: Partial<ZRXConfig> | undefined): config is ZRXConfig;
    isConfigAndContextValidForTxBuilding(config: Partial<ZRXConfig> | undefined): config is ZRXConfig;
}
export {};
