import { QuoteParams, QuoteSourceMetadata, SourceQuoteResponse, SourceQuoteTransaction, BuildTxParams } from './types';
import { AlwaysValidConfigAndContextSource } from './base/always-valid-source';
type XYFinanceSupport = {
    buyOrders: false;
    swapAndTransfer: true;
};
type XYFinanceConfig = {};
type XYFinanceData = {
    tx: SourceQuoteTransaction;
};
export declare class XYFinanceQuoteSource extends AlwaysValidConfigAndContextSource<XYFinanceSupport, XYFinanceConfig, XYFinanceData> {
    getMetadata(): QuoteSourceMetadata<XYFinanceSupport>;
    quote({ components: { fetchService }, request: { chainId, sellToken, buyToken, order, config: { slippagePercentage, timeout }, accounts: { takeFrom, recipient }, }, config, }: QuoteParams<XYFinanceSupport>): Promise<SourceQuoteResponse<XYFinanceData>>;
    buildTx({ request }: BuildTxParams<XYFinanceConfig, XYFinanceData>): Promise<SourceQuoteTransaction>;
}
export {};
