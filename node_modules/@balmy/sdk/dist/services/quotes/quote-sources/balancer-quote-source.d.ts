import { QuoteParams, QuoteSourceMetadata, SourceQuoteResponse, SourceQuoteTransaction, BuildTxParams } from './types';
import { AlwaysValidConfigAndContextSource } from './base/always-valid-source';
type BalancerSupport = {
    buyOrders: true;
    swapAndTransfer: false;
};
type BalancerConfig = {};
type BalancerData = {
    tx: SourceQuoteTransaction;
};
export declare class BalancerQuoteSource extends AlwaysValidConfigAndContextSource<BalancerSupport, BalancerConfig, BalancerData> {
    getMetadata(): QuoteSourceMetadata<BalancerSupport>;
    quote({ components: { fetchService }, request: { chainId, sellToken, buyToken, order, accounts: { takeFrom }, config: { slippagePercentage }, external, }, config, }: QuoteParams<BalancerSupport>): Promise<SourceQuoteResponse<BalancerData>>;
    buildTx({ request }: BuildTxParams<BalancerConfig, BalancerData>): Promise<SourceQuoteTransaction>;
}
export {};
