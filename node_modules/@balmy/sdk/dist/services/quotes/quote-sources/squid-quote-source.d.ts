import { IQuoteSource, SourceQuoteTransaction, BuildTxParams } from './types';
import { QuoteParams, QuoteSourceMetadata, SourceQuoteResponse } from './types';
type SquidConfig = {
    integratorId: string;
};
type SquidSupport = {
    buyOrders: false;
    swapAndTransfer: true;
};
type SquidData = {
    tx: SourceQuoteTransaction;
};
export declare class SquidQuoteSource implements IQuoteSource<SquidSupport, SquidConfig, SquidData> {
    getMetadata(): QuoteSourceMetadata<SquidSupport>;
    quote({ components: { fetchService }, request: { chainId, sellToken, buyToken, order, accounts: { takeFrom, recipient }, config: { slippagePercentage, timeout }, }, config, }: QuoteParams<SquidSupport, SquidConfig>): Promise<SourceQuoteResponse<SquidData>>;
    buildTx({ request }: BuildTxParams<SquidConfig, SquidData>): Promise<SourceQuoteTransaction>;
    isConfigAndContextValidForQuoting(config: Partial<SquidConfig> | undefined): config is SquidConfig;
    isConfigAndContextValidForTxBuilding(config: Partial<SquidConfig> | undefined): config is SquidConfig;
}
export {};
