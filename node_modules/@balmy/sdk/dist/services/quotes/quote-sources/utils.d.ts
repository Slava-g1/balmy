import { Address, Chain, ChainId, TokenAddress } from '../../../types';
import { SourceQuoteResponse } from './types';
import { SourceMetadata } from '../types';
export declare function failed(metadata: SourceMetadata, chain: Chain | ChainId, sellToken: TokenAddress, buyToken: TokenAddress, error?: any): never;
type SlippagelessQuote<CustomQuoteSourceData extends Record<string, any>> = Omit<SourceQuoteResponse<CustomQuoteSourceData>, 'minBuyAmount' | 'maxSellAmount' | 'type'>;
export declare function addQuoteSlippage<CustomQuoteSourceData extends Record<string, any>>(quote: SlippagelessQuote<CustomQuoteSourceData>, type: 'sell' | 'buy', slippagePercentage: number): SourceQuoteResponse<CustomQuoteSourceData>;
export declare function calculateAllowanceTarget(sellToken: TokenAddress, allowanceTarget: Address): string;
export declare function checksum(address: Address): `0x${string}`;
export {};
