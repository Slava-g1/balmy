import { IQuoteSource, QuoteParams, QuoteSourceMetadata, SourceQuoteResponse, SourceQuoteTransaction, BuildTxParams } from './types';
export declare const PORTALS_FI_METADATA: QuoteSourceMetadata<PortalsFiSupport>;
type PortalsFiConfig = {
    apiKey: string;
};
type PortalsFiSupport = {
    buyOrders: false;
    swapAndTransfer: false;
};
type PortalsFiData = {
    tx: SourceQuoteTransaction;
};
export declare class PortalsFiQuoteSource implements IQuoteSource<PortalsFiSupport, PortalsFiConfig, PortalsFiData> {
    getMetadata(): QuoteSourceMetadata<PortalsFiSupport>;
    quote({ components: { fetchService }, request: { chainId, sellToken, buyToken, order, accounts: { takeFrom }, config: { slippagePercentage, timeout }, }, config, }: QuoteParams<PortalsFiSupport, PortalsFiConfig>): Promise<SourceQuoteResponse<PortalsFiData>>;
    buildTx({ request }: BuildTxParams<PortalsFiConfig, PortalsFiData>): Promise<SourceQuoteTransaction>;
    isConfigAndContextValidForQuoting(config: Partial<PortalsFiConfig> | undefined): config is PortalsFiConfig;
    isConfigAndContextValidForTxBuilding(config: Partial<PortalsFiConfig> | undefined): config is PortalsFiConfig;
}
export {};
