import { QuoteParams, QuoteSourceMetadata, SourceQuoteResponse, SourceQuoteTransaction, BuildTxParams } from './types';
import { AlwaysValidConfigAndContextSource } from './base/always-valid-source';
type SovrynSupport = {
    buyOrders: false;
    swapAndTransfer: false;
};
type SovrynConfig = {
    url?: string;
};
type SovrynData = {
    tx: SourceQuoteTransaction;
};
export declare class SovrynQuoteSource extends AlwaysValidConfigAndContextSource<SovrynSupport, SovrynConfig, SovrynData> {
    getMetadata(): QuoteSourceMetadata<SovrynSupport>;
    quote({ components: { fetchService }, request: { chainId, config: { slippagePercentage, timeout, txValidFor }, accounts: { takeFrom }, order, external, ...request }, config, }: QuoteParams<SovrynSupport, SovrynConfig>): Promise<SourceQuoteResponse<SovrynData>>;
    buildTx({ request }: BuildTxParams<SovrynConfig, SovrynData>): Promise<SourceQuoteTransaction>;
}
export {};
