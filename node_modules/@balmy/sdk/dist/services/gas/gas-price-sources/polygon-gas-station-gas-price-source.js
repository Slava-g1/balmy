"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolygonGasStationGasPriceSource = void 0;
const _chains_1 = require("../../../chains");
const viem_1 = require("viem");
class PolygonGasStationGasPriceSource {
    constructor(fetchService) {
        this.fetchService = fetchService;
    }
    supportedSpeeds() {
        const support = { standard: 'present', fast: 'present', instant: 'present' };
        return { [_chains_1.Chains.POLYGON.chainId]: support };
    }
    async getGasPrice({ chainId, config, }) {
        const response = await this.fetchService.fetch('https://gasstation-mainnet.matic.network/v2', { timeout: config?.timeout });
        const { safeLow, standard, fast } = await response.json();
        return {
            standard: calculateGas(safeLow),
            fast: calculateGas(standard),
            instant: calculateGas(fast),
        };
    }
}
exports.PolygonGasStationGasPriceSource = PolygonGasStationGasPriceSource;
function calculateGas(gas) {
    return {
        maxFeePerGas: (0, viem_1.parseUnits)(gas.maxFee.toFixed(9), 9),
        maxPriorityFeePerGas: (0, viem_1.parseUnits)(gas.maxPriorityFee.toFixed(9), 9),
    };
}
//# sourceMappingURL=polygon-gas-station-gas-price-source.js.map