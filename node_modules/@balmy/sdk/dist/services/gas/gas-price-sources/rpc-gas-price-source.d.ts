import { ChainId, FieldsRequirements, SupportRecord, TimeString } from '../../../types';
import { IProviderService } from '../../providers/types';
import { GasPriceResult, GasValueForVersions, IGasPriceSource } from '../types';
type GasValues = GasValueForVersions<'standard'>;
export declare class RPCGasPriceSource implements IGasPriceSource<GasValues> {
    private readonly providerService;
    constructor(providerService: IProviderService);
    supportedSpeeds(): {
        [k: string]: SupportRecord<GasValues>;
    };
    getGasPrice<Requirements extends FieldsRequirements<GasValues>>({ chainId, config }: {
        chainId: ChainId;
        config?: {
            timeout?: TimeString;
        };
    }): Promise<GasPriceResult<GasValues, Requirements>>;
}
export {};
