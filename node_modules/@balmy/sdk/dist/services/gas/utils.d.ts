import { DefaultRequirements, FieldsRequirements } from '../../types';
import { EIP1159GasPrice, GasPriceResult, SupportedGasValues } from './types';
export declare function isEIP1159Compatible<GasValues extends SupportedGasValues, Requirements extends FieldsRequirements<GasValues> = DefaultRequirements<GasValues>>(gasPriceForSpeed: GasPriceResult<object, Requirements>): gasPriceForSpeed is GasPriceResult<OnlyEIP1559<GasValues>, Requirements>;
type OnlyEIP1559<GasValues extends SupportedGasValues> = {
    [K in keyof GasValues]: GasValues[K] extends EIP1159GasPrice ? GasValues[K] : never;
};
export declare function isValidGasPriceValue(value: any): boolean;
export declare function filterOutInvalidSpeeds(result: GasPriceResult<object>): {
    [k: string]: unknown;
};
export {};
