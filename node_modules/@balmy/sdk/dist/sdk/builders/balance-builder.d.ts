import { IBalanceService, IBalanceSource } from '../../services/balances/types';
import { CacheConfig } from '../../shared/concurrent-lru-cache';
import { RPCBalanceSourceConfig } from '../../services/balances/balance-sources/rpc-balance-source';
import { IProviderService } from '../../services/providers';
import { IFetchService } from '../../services/fetch';
import { ILogsService } from '../../services/logs';
import { BuildProviderParams } from './provider-builder';
export type BalanceSourceInput = {
    type: 'rpc-multicall';
    config?: RPCBalanceSourceConfig;
    customProvider?: BuildProviderParams;
} | {
    type: 'cached';
    underlyingSource: BalanceSourceInput;
    config: CacheConfig;
} | {
    type: 'custom';
    instance: IBalanceSource;
} | {
    type: 'fastest';
    sources: BalanceSourceInput[];
};
export type BuildBalancesParams = {
    source: BalanceSourceInput;
};
export declare function buildBalanceService(params: BuildBalancesParams | undefined, fetchService: IFetchService, providerService: IProviderService, logsService: ILogsService): IBalanceService;
