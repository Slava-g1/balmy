import { IFetchService } from '../../services/fetch';
import { CacheConfig } from '../../shared/concurrent-lru-cache';
import { IPriceService, IPriceSource } from '../../services/prices';
import { PriceAggregationMethod } from '../../services/prices/price-sources/aggregator-price-source';
export type PriceSourceInput = {
    type: 'defi-llama';
} | {
    type: 'odos';
} | {
    type: 'coingecko';
} | {
    type: 'balmy';
    apiKey: string;
} | {
    type: 'prioritized';
    sources: PriceSourceInput[];
} | {
    type: 'fastest';
    sources: PriceSourceInput[];
} | {
    type: 'aggregate';
    sources: PriceSourceInput[];
    by: PriceAggregationMethod;
} | {
    type: 'cached';
    underlyingSource: PriceSourceInput;
    config: CacheConfig;
} | {
    type: 'custom';
    instance: IPriceSource;
};
export type BuildPriceParams = {
    source: PriceSourceInput;
};
export declare function buildPriceService(params: BuildPriceParams | undefined, fetchService: IFetchService): IPriceService;
