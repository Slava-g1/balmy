"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildAllowanceService = void 0;
const rpc_allowance_source_1 = require("../../services/allowances/allowance-sources/rpc-allowance-source");
const allowance_service_1 = require("../../services/allowances/allowance-service");
const cached_allowance_source_1 = require("../../services/allowances/allowance-sources/cached-allowance-source");
function buildAllowanceService(params, fetchService, providerService) {
    const source = buildSource(params?.source, { fetchService, providerService });
    return new allowance_service_1.AllowanceService(source);
}
exports.buildAllowanceService = buildAllowanceService;
function buildSource(source, { fetchService, providerService }) {
    switch (source?.type) {
        case undefined:
        case 'rpc-multicall':
            return new rpc_allowance_source_1.RPCAllowanceSource(providerService);
        case 'cached':
            const underlying = buildSource(source.underlyingSource, { fetchService, providerService });
            return new cached_allowance_source_1.CachedAllowanceSource(underlying, source.config);
        case 'custom':
            return source.instance;
    }
}
//# sourceMappingURL=allowance-builder.js.map