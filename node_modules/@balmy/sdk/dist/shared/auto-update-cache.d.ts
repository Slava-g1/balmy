import { TimeString } from '../types';
type CacheConstructorParams<Value> = {
    calculate: () => Promise<Value>;
    config: AutoUpdateCacheConfig;
};
export type AutoUpdateCacheConfig = {
    valid?: 'always' | {
        onlyFor: TimeString;
    };
    update: {
        every: TimeString;
        ifFailsTryAgainIn?: TimeString;
    };
};
export declare class AutoUpdateCache<Value> {
    private readonly calculate;
    private readonly config;
    private cache;
    constructor({ calculate, config }: CacheConstructorParams<Value>);
    getValue(): Value | undefined;
    private update;
}
export {};
