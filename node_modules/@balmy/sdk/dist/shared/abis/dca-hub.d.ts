declare const _default: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint32";
        readonly name: "_amountOfSwaps";
        readonly type: "uint32";
    }, {
        readonly internalType: "uint32";
        readonly name: "_swapInterval";
        readonly type: "uint32";
    }, {
        readonly internalType: "address";
        readonly name: "_owner";
        readonly type: "address";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "enum IDCAPermissionManager.Permission[]";
            readonly name: "permissions";
            readonly type: "uint8[]";
        }];
        readonly internalType: "struct IDCAPermissionManager.PermissionSet[]";
        readonly name: "_permissions";
        readonly type: "tuple[]";
    }];
    readonly name: "deposit";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint32";
        readonly name: "_newAmountOfSwaps";
        readonly type: "uint32";
    }];
    readonly name: "increasePosition";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint32";
        readonly name: "_newAmountOfSwaps";
        readonly type: "uint32";
    }, {
        readonly internalType: "address";
        readonly name: "_recipient";
        readonly type: "address";
    }];
    readonly name: "reducePosition";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "_recipientUnswapped";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_recipientSwapped";
        readonly type: "address";
    }];
    readonly name: "terminate";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_unswapped";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_swapped";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }];
    readonly name: "userPosition";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "contract IERC20Metadata";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20Metadata";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "swapInterval";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "swapsExecuted";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint256";
            readonly name: "swapped";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32";
            readonly name: "swapsLeft";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint256";
            readonly name: "remaining";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint120";
            readonly name: "rate";
            readonly type: "uint120";
        }];
        readonly internalType: "struct IDCAHubPositionHandler.UserPosition";
        readonly name: "_userPosition";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "_recipient";
        readonly type: "address";
    }];
    readonly name: "withdrawSwapped";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];
export default _default;
