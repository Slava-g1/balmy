declare const _default: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "bytes[]";
        readonly name: "_calls";
        readonly type: "bytes[]";
    }];
    readonly name: "simulate";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "result";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "gasSpent";
            readonly type: "uint256";
        }];
        readonly internalType: "struct ISimulationAdapter.SimulationResult[]";
        readonly name: "_results";
        readonly type: "tuple[]";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "tokenIn";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountIn";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "allowanceTarget";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "swapper";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "swapData";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "tokenOut";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "minAmountOut";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "shareBps";
                readonly type: "uint256";
            }];
            readonly internalType: "struct Token.DistributionTarget[]";
            readonly name: "transferOut";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "bytes";
            readonly name: "misc";
            readonly type: "bytes";
        }];
        readonly internalType: "struct ISwapPermit2Adapter.SellOrderSwapParams";
        readonly name: "_params";
        readonly type: "tuple";
    }];
    readonly name: "sellOrderSwap";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_amountIn";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amountOut";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "tokenIn";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxAmountIn";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "allowanceTarget";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "swapper";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "swapData";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "tokenOut";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountOut";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "shareBps";
                readonly type: "uint256";
            }];
            readonly internalType: "struct Token.DistributionTarget[]";
            readonly name: "transferOut";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "address";
            readonly name: "unspentTokenInRecipient";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "misc";
            readonly type: "bytes";
        }];
        readonly internalType: "struct ISwapPermit2Adapter.BuyOrderSwapParams";
        readonly name: "_params";
        readonly type: "tuple";
    }];
    readonly name: "buyOrderSwap";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_amountIn";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amountOut";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IPermit2.TokenPermissions[]";
            readonly name: "tokens";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.BatchPermit";
        readonly name: "_batchPermit";
        readonly type: "tuple";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "allowanceTarget";
            readonly type: "address";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.AllowanceTarget[]";
        readonly name: "_allowanceTargets";
        readonly type: "tuple[]";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.ContractCall[]";
        readonly name: "_contractCalls";
        readonly type: "tuple[]";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "shareBps";
                readonly type: "uint256";
            }];
            readonly internalType: "struct Token.DistributionTarget[]";
            readonly name: "distribution";
            readonly type: "tuple[]";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.TransferOut[]";
        readonly name: "_transferOut";
        readonly type: "tuple[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "_deadline";
        readonly type: "uint256";
    }];
    readonly name: "executeWithBatchPermit";
    readonly outputs: readonly [{
        readonly internalType: "bytes[]";
        readonly name: "_executionResults";
        readonly type: "bytes[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_tokenBalances";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.SinglePermit";
        readonly name: "_permit";
        readonly type: "tuple";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "allowanceTarget";
            readonly type: "address";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.AllowanceTarget[]";
        readonly name: "_allowanceTargets";
        readonly type: "tuple[]";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.ContractCall[]";
        readonly name: "_contractCalls";
        readonly type: "tuple[]";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "shareBps";
                readonly type: "uint256";
            }];
            readonly internalType: "struct Token.DistributionTarget[]";
            readonly name: "distribution";
            readonly type: "tuple[]";
        }];
        readonly internalType: "struct IArbitraryExecutionPermit2Adapter.TransferOut[]";
        readonly name: "_transferOut";
        readonly type: "tuple[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "_deadline";
        readonly type: "uint256";
    }];
    readonly name: "executeWithPermit";
    readonly outputs: readonly [{
        readonly internalType: "bytes[]";
        readonly name: "_executionResults";
        readonly type: "bytes[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_tokenBalances";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}];
export default _default;
