declare const _default: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "contract IDCAHub";
        readonly name: "_hub";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_to";
        readonly type: "address";
    }, {
        readonly internalType: "uint32";
        readonly name: "_amountOfSwaps";
        readonly type: "uint32";
    }, {
        readonly internalType: "uint32";
        readonly name: "_swapInterval";
        readonly type: "uint32";
    }, {
        readonly internalType: "address";
        readonly name: "_owner";
        readonly type: "address";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "enum IDCAPermissionManager.Permission[]";
            readonly name: "permissions";
            readonly type: "uint8[]";
        }];
        readonly internalType: "struct IDCAPermissionManager.PermissionSet[]";
        readonly name: "_permissions";
        readonly type: "tuple[]";
    }, {
        readonly internalType: "bytes";
        readonly name: "_miscellaneous";
        readonly type: "bytes";
    }];
    readonly name: "depositWithBalanceOnContract";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IDCAHub";
        readonly name: "_hub";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint32";
        readonly name: "_newSwaps";
        readonly type: "uint32";
    }];
    readonly name: "increasePositionWithBalanceOnContract";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes[]";
        readonly name: "_data";
        readonly type: "bytes[]";
    }];
    readonly name: "multicall";
    readonly outputs: readonly [{
        readonly internalType: "bytes[]";
        readonly name: "_results";
        readonly type: "bytes[]";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "pendingGovernor";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IDCAPermissionManager";
        readonly name: "_permissionManager";
        readonly type: "address";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "enum IDCAPermissionManager.Permission[]";
            readonly name: "permissions";
            readonly type: "uint8[]";
        }];
        readonly internalType: "struct IDCAPermissionManager.PermissionSet[]";
        readonly name: "_permissions";
        readonly type: "tuple[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "_tokenId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_deadline";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint8";
        readonly name: "_v";
        readonly type: "uint8";
    }, {
        readonly internalType: "bytes32";
        readonly name: "_r";
        readonly type: "bytes32";
    }, {
        readonly internalType: "bytes32";
        readonly name: "_s";
        readonly type: "bytes32";
    }];
    readonly name: "permissionPermit";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_nonce";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_deadline";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes";
        readonly name: "_signature";
        readonly type: "bytes";
    }, {
        readonly internalType: "address";
        readonly name: "_recipient";
        readonly type: "address";
    }];
    readonly name: "permitTakeFromCaller";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IDCAHub";
        readonly name: "_hub";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint32";
        readonly name: "_newSwaps";
        readonly type: "uint32";
    }, {
        readonly internalType: "address";
        readonly name: "_recipient";
        readonly type: "address";
    }];
    readonly name: "reducePosition";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_allowanceToken";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_value";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes";
        readonly name: "_swapData";
        readonly type: "bytes";
    }, {
        readonly internalType: "address";
        readonly name: "_tokenOut";
        readonly type: "address";
    }];
    readonly name: "runSwap";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_amountOut";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IDCAHub";
        readonly name: "_hub";
        readonly type: "address";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "tokenA";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "tokenB";
            readonly type: "address";
        }];
        readonly internalType: "struct Pair[]";
        readonly name: "_pairs";
        readonly type: "tuple[]";
    }, {
        readonly internalType: "bool";
        readonly name: "_calculatePrivilegedAvailability";
        readonly type: "bool";
    }];
    readonly name: "secondsUntilNextSwap";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_token";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_recipient";
        readonly type: "address";
    }];
    readonly name: "sendBalanceOnContractToRecipient";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_newSwapper";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_newAllowanceTarget";
        readonly type: "address";
    }];
    readonly name: "setSwapper";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes[]";
        readonly name: "_calls";
        readonly type: "bytes[]";
    }];
    readonly name: "simulate";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "result";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "gasSpent";
            readonly type: "uint256";
        }];
        readonly internalType: "struct ISimulationAdapter.SimulationResult[]";
        readonly name: "_results";
        readonly type: "tuple[]";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_call";
        readonly type: "bytes";
    }];
    readonly name: "simulateAndRevert";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes4";
        readonly name: "_interfaceId";
        readonly type: "bytes4";
    }];
    readonly name: "supportsInterface";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "swapper";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "_recipient";
        readonly type: "address";
    }];
    readonly name: "takeFromCaller";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IDCAHub";
        readonly name: "_hub";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "_recipientUnswapped";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_recipientSwapped";
        readonly type: "address";
    }];
    readonly name: "terminate";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_unswapped";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_swapped";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IDCAHub";
        readonly name: "_hub";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_positionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "_recipient";
        readonly type: "address";
    }];
    readonly name: "withdrawSwapped";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_swapped";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}];
export default _default;
