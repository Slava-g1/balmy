"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Contract = void 0;
const utils_1 = require("./utils");
class Contract {
    constructor({ defaultAddress, overrides }) {
        this.overrides = {};
        this.defaultAddress = defaultAddress;
        this.overrides = overrides;
    }
    address(chain) {
        const chainId = typeof chain === 'number' ? chain : chain.chainId;
        const address = this.overrides[chainId] ?? this.defaultAddress;
        if (!address) {
            throw new Error(`Found no address on chain with id ${chainId}`);
        }
        return address;
    }
    static with({ defaultAddress }) {
        return new ContractBuilder(defaultAddress);
    }
    static withNoDefault() {
        return new ContractBuilder();
    }
}
exports.Contract = Contract;
class ContractBuilder {
    constructor(defaultAddress) {
        this.overrides = {};
        this.defaultAddress = defaultAddress ? (0, utils_1.toLower)(defaultAddress) : undefined;
    }
    and({ address, onChain }) {
        const chainId = typeof onChain === 'number' ? onChain : onChain.chainId;
        this.overrides[chainId] = (0, utils_1.toLower)(address);
        return this;
    }
    build() {
        return new Contract({ defaultAddress: this.defaultAddress, overrides: this.overrides });
    }
}
//# sourceMappingURL=contracts.js.map