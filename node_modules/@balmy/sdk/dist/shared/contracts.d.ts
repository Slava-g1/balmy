import { Address as ViemAddress } from 'viem';
import { ChainId, Address, Chain } from '../types';
export declare class Contract {
    private readonly defaultAddress;
    private readonly overrides;
    constructor({ defaultAddress, overrides }: {
        defaultAddress: ContractAddress | undefined;
        overrides: Record<ChainId, ContractAddress>;
    });
    address(chain: ChainId | Chain): ContractAddress;
    static with({ defaultAddress }: {
        defaultAddress: Address;
    }): ContractBuilder;
    static withNoDefault(): ContractBuilder;
}
declare class ContractBuilder {
    private readonly overrides;
    private readonly defaultAddress;
    constructor(defaultAddress?: Address);
    and({ address, onChain }: {
        address: Address;
        onChain: ChainId | Chain;
    }): this;
    build(): Contract;
}
type ContractAddress = Lowercase<Address> & ViemAddress;
export {};
